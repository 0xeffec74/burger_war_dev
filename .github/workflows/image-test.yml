name: Burger-War Image Build & Test

# トリガーイベントの指定
on:
  # 指定ブランチで指定ファイルがPUSHされたときに実行する
  push:
    paths:
      - 'docker/core/**'
      - 'docker/sim/**'
      - 'docker/robo/**'
      - 'burger_navigation/**'
      - 'burger_war_dev/**'
      - '.github/workflows/image-test.yml'

  # ブラウザ上からの手動実行設定
  workflow_dispatch:

# 環境変数の設定
env:
  DOCKER_BUILDKIT: 1
  RESISTRY_URL: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME_CORE: burger-war-core
  DOCKER_FILE_CORE: ./docker/core/Dockerfile
  DOCKER_FILE_SIM: ./docker/sim/Dockerfile
  DOCKER_FILE_ROBO: ./docker/robo/Dockerfile
  TEST_VERSION: test.${{ github.run_number }}
  TEST_LOG_ARCHIVE: test_logs-${{ github.run_number }}
  DISPLAY: ':99'
  KIT_VERSION: test.13

# 実行する処理
jobs:
  # ビルドとテストを実施し、テストにPASSすれば、仮バージョンでプッシュ
  build-test:

    runs-on: ubuntu-20.04

    steps:
      # 環境準備
      - name: Checkout repository
        uses: actions/checkout@v2

      # Dockerのversion確認
      - name: Print Docker Version
        run: |
          docker version

      # burger-warイメージのビルド
      - name: Build Docker Image
        run: |
          bash commands/docker-build.sh -t sim -k ${{ env.KIT_VERSION }}
          bash commands/docker-build.sh -t robo -k ${{ env.KIT_VERSION }}

      # xvfbのインストールと起動
      - name: Xvfb install and run
        run: |
          sudo apt-get install -y xvfb
          Xvfb -ac ${{ env.DISPLAY }} -screen 0 1280x780x24 &

      # burger-warコンテナ起動
      - name: Launch Docker Container
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/catkin_ws/logs
          docker run \
            --name ${{ env.IMAGE_NAME_CORE }} \
            -d \
            --privileged \
            --net host \
            --mount type=bind,src=${GITHUB_WORKSPACE}/catkin_ws/logs,dst=/home/developer/catkin_ws/logs \
            --device /dev/snd \
            -v /dev/shm \
            -e DISPLAY=${{ env.DISPLAY }} \
            -e HOST_USER_ID=$(id -u) \
            -e HOST_GROUP_ID=$(id -g) \
            ${{ env.IMAGE_NAME_CORE }} \
            tail -f /dev/null
          docker ps -a
          docker logs ${{ env.IMAGE_NAME_CORE }}

      # ロボコンプロジェクトのビルド
      - name: Build Robot Programs
        run: |
          docker exec -u developer -t ${{ env.IMAGE_NAME_CORE }} bash -l -c "catkin build"

      # burger-warのテスト
      - name: Test Docker Image
        id: image-test
        run: |
          docker exec -u developer -t ${{ env.IMAGE_NAME_CORE }} bash -l -c "cd src/burger_war_kit && bash scripts/sim_run_test.sh"

      # テスト結果をArtifactにアップロードする
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_LOG_ARCHIVE }}
          path: ${{ github.WORKSPACE }}/catkin_ws/logs/test_logs.tgz
          retention-days: 5

      # ghcr.ioにログイン
      - name: Login to ghrc.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      # burger-warイメージをテストバージョンとしてプッシュ
      - name: Push Docker Image
        run: |
          docker tag ${{ env.IMAGE_NAME_CORE }} ${{ env.RESISTRY_URL }}/${{ env.IMAGE_NAME_CORE }}:${{ env.TEST_VERSION }}
          docker push ${{ env.RESISTRY_URL }}/${{ env.IMAGE_NAME_CORE }}:${{ env.TEST_VERSION }}

